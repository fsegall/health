{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "l1czuwlxslihl"
  },
  "info": {
    "description": "This is an API for managing data about people and their households to conduct food security analysis during the COVID-19 pandemic",
    "version": 1,
    "title": "Health API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": "email:segall.felipe@gmail.com",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "persons",
      "description": "Endpoint to manage data about the person that was interviewed"
    },
    {
      "name": "households",
      "description": "Endpoints to manage data about a household"
    },
    {
      "name": "familymembers",
      "description": "Endpoints to manage data about a family member"
    },
    {
      "name": "addresses",
      "description": "Endpoints to manage data about a household address"
    },
    {
      "name": "projects",
      "description": "Endpoints to manage data about projects"
    },
    {
      "name": "interviews",
      "description": "Endpoints to manage data about interviews"
    },
    {
      "name": "sessions",
      "description": "Endpoints to authenticate the user"
    },
    {
      "name": "password",
      "description": "Endpoints to make a new password"
    },
    {
      "name": "users",
      "description": "Endpoints to create an user and store data about the research interviewer"
    }
  ],
  "paths": {
    "/projects": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Adds a new project to the research",
        "description": "",
        "operationId": "addProject",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Project"
        },
        "responses": {
          "201": {
            "description": "A project was successfully saved to the database"
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/interviews": {
      "post": {
        "tags": [
          "interviews"
        ],
        "summary": "Adds a new interview to the project",
        "description": "",
        "operationId": "addInterview",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Interview"
        },
        "responses": {
          "201": {
            "description": "A project was successfully saved to the database"
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/persons": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists all persons that were interviewed",
        "description": "",
        "operationId": "listPersons",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "persons"
        ],
        "summary": "Add a person that was interviewed",
        "description": "",
        "operationId": "addPerson",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Person"
        },
        "responses": {
          "201": {
            "description": "A person was successfully saved to the database"
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "persons"
        ],
        "summary": "Update an existing person",
        "description": "",
        "operationId": "updatePerson",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PersonUpdate"
        },
        "responses": {
          "200": {
            "description": "The person was updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/persons/{personId}": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Find person by ID",
        "description": "Returns a single person",
        "operationId": "getPersonById",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully returned a person profile",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          }
        }
      },
      "delete": {
        "tags": [
          "persons"
        ],
        "summary": "Deletes a person",
        "description": "",
        "operationId": "deletePerson",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Get personId after creating or listing persons",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The person was deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/persons/{personId}/household": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Returns a household",
        "description": "",
        "operationId": "getHouseholdByPersonId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Get personId after creating or listing persons",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Household"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Household"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/persons/{personId}/family": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Returns family members",
        "description": null,
        "operationId": "getFamilyByPersonId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Get personId after creating or listing persons",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully returned family members",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FamilyMember"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FamilyMember"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/households": {
      "get": {
        "tags": [
          "households"
        ],
        "summary": "Lists all households",
        "description": "",
        "operationId": "listHouseholds",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Household"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Household"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "households"
        ],
        "summary": "Add a household of an interviewed person",
        "description": "",
        "operationId": "addHousehold",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Household"
        },
        "responses": {
          "201": {
            "description": "A household was successfully saved to the database",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Household"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Household"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/familymembers": {
      "get": {
        "tags": [
          "familymembers"
        ],
        "summary": "Lists all family members",
        "description": "",
        "operationId": "listFamilyMembers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FamilyMember"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FamilyMember"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FamilyMember"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "familymembers"
        ],
        "summary": "Add a family member of an interviewed person",
        "description": "",
        "operationId": "addFamilyMember",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FamilyMember"
        },
        "responses": {
          "201": {
            "description": "A family member was successfully saved to the database"
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "addresses"
        ],
        "summary": "Lists all addresses",
        "description": "",
        "operationId": "listAddresses",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "addresses"
        ],
        "summary": "Add a household address",
        "description": "",
        "operationId": "addAddress",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Address"
        },
        "responses": {
          "201": {
            "description": "An address was successfully saved to the database",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/addresses/{personId}": {
      "get": {
        "tags": [
          "addresses"
        ],
        "summary": "Returns an address",
        "description": "Address of the interviewed person",
        "operationId": "getAddressByPersonId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Get personId after creating or listing persons",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Lists all users",
        "description": "",
        "operationId": "listUsers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "This creates an interviewer profile as an user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "Created user object",
          "required": true
        },
        "responses": {
          "201": {
            "description": "The user was successfully created"
          },
          "400": {
            "description": "Invalid user data"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update an existing user - Interviewer profile",
        "description": "",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserUpdate"
        },
        "responses": {
          "200": {
            "description": "The user was updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Uploads an user avatar file",
        "description": "",
        "operationId": "uploadAvatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was successfully created"
          },
          "400": {
            "description": "Invalid user data"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully returned a user profile",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/Auth"
        },
        "responses": {
          "200": {
            "description": "login successful",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "tags": [
          "password"
        ],
        "summary": "Allows user to ask for new password",
        "description": "",
        "operationId": "newPassword",
        "requestBody": {
          "$ref": "#/components/requestBodies/Pass"
        },
        "responses": {
          "200": {
            "description": "login successful",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pass"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pass"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email supplied"
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "tags": [
          "password"
        ],
        "summary": "Allows user to change password",
        "description": "",
        "operationId": "newPassword",
        "requestBody": {
          "$ref": "#/components/requestBodies/NewPass"
        },
        "responses": {
          "200": {
            "description": "Password modified successfully"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/indigenous-interviews": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interviews",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndigeanousInterview"
                }
              }
            }
          },
          "403": {
            "description": "Interviewer does not have access to project"
          },
          "404": {
            "description": "Project/Interviewer not found"
          }
        },
        "description": "Create a new indigeanous interview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "municipio": {
                    "type": "string"
                  },
                  "aldeia_comunidade": {
                    "type": "string"
                  },
                  "terra_indigena": {
                    "type": "string"
                  },
                  "area_retomada": {
                    "type": "number"
                  },
                  "acampamento": {
                    "type": "string"
                  },
                  "entrevistador_id": {
                    "type": "string"
                  },
                  "numero_projeto": {
                    "type": "number"
                  },
                  "data_entrevista": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "municipio",
                  "aldeia_comunidade",
                  "terra_indigena",
                  "area_retomada",
                  "acampamento",
                  "entrevistador_id",
                  "numero_projeto",
                  "data_entrevista"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interviews/demography": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interviews-demography",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndigeanousDemography"
                }
              }
            }
          },
          "404": {
            "description": "Indigeanous interview not found"
          }
        },
        "description": "Create demography data of indigeanous interview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entrevista_indigena_id": {
                    "type": "string"
                  },
                  "total_moradores": {
                    "type": "number"
                  },
                  "moradores": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "nome": {
                          "type": "string"
                        },
                        "relacao_com_lider": {
                          "type": "string"
                        },
                        "idade": {
                          "type": "number"
                        },
                        "sexo": {
                          "type": "string"
                        },
                        "indigena": {
                          "type": "string"
                        },
                        "povo_etnia": {
                          "type": "string"
                        },
                        "serie_frequentada_escola": {
                          "type": "string"
                        },
                        "crenca_religiao": {
                          "type": "string"
                        },
                        "ocupacao_principal": {
                          "type": "string"
                        },
                        "funcao_na_comunidade": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "nome",
                        "relacao_com_lider",
                        "idade",
                        "sexo",
                        "indigena",
                        "povo_etnia",
                        "serie_frequentada_escola",
                        "crenca_religiao",
                        "ocupacao_principal",
                        "funcao_na_comunidade"
                      ]
                    }
                  },
                  "morador_trabalhou_fazendas": {
                    "type": "string"
                  },
                  "morador_trabalhou_catacao": {
                    "type": "string"
                  }
                },
                "required": [
                  "entrevista_indigena_id",
                  "total_moradores",
                  "moradores",
                  "morador_trabalhou_fazendas",
                  "morador_trabalhou_catacao"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interviews/residence": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interview-residence",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Create new indigeanous interview residence info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "entrevista_indigena_id": "string",
                    "ultima_moradia": "string",
                    "piso": "string",
                    "material_paredes": "string",
                    "material_telhado": "string",
                    "quantidade_comodos": "number",
                    "utensilios_casa": "string",
                    "acesso_agua": "string",
                    "origem_agua": "string",
                    "qualidade_agua_para_beber_e_cozinhar": "string",
                    "forma_acesso_agua": "string",
                    "possui_banheiro": "string",
                    "forma_coleta_esgoto": "string",
                    "destino_lixo_da_residencia": "string",
                    "veiculos": "string",
                    "renda_total_30_dias": "string"
                  }
                },
                "properties": {
                  "entrevista_indigena_id": {
                    "type": "string"
                  },
                  "ultima_moradia": {
                    "type": "string"
                  },
                  "tipo_moradia": {
                    "type": "string"
                  },
                  "piso": {
                    "type": "string"
                  },
                  "material_paredes": {
                    "type": "string"
                  },
                  "material_telhado": {
                    "type": "string"
                  },
                  "quantidade_comodos": {
                    "type": "string"
                  },
                  "utensilios_casa": {
                    "type": "object",
                    "required": [
                      "energia_eletrica",
                      "televisao",
                      "geladeira",
                      "fogao_a_gas",
                      "maquina_de_lavar_ou_tanquinho",
                      "computador_ou_tablet_ou_laptop",
                      "celular_com_internet",
                      "celular_sem_internet",
                      "trator_ou_rocadeira_para_lavoura",
                      "radio"
                    ],
                    "minProperties": 0,
                    "properties": {
                      "energia_eletrica": {
                        "type": "boolean"
                      },
                      "televisao": {
                        "type": "boolean"
                      },
                      "geladeira": {
                        "type": "boolean"
                      },
                      "fogao_a_gas": {
                        "type": "boolean"
                      },
                      "maquina_de_lavar_ou_tanquinho": {
                        "type": "boolean"
                      },
                      "computador_ou_tablet_ou_laptop": {
                        "type": "boolean"
                      },
                      "celular_com_internet": {
                        "type": "boolean"
                      },
                      "celular_sem_internet": {
                        "type": "boolean"
                      },
                      "trator_ou_rocadeira_para_lavoura": {
                        "type": "boolean"
                      },
                      "radio": {
                        "type": "boolean"
                      }
                    }
                  },
                  "acesso_agua": {
                    "type": "string"
                  },
                  "origem_agua": {
                    "type": "string"
                  },
                  "qualidade_agua_para_beber_e_cozinhar": {
                    "type": "string"
                  },
                  "forma_acesso_agua": {
                    "type": "string"
                  },
                  "possui_banheiro": {
                    "type": "string"
                  },
                  "forma_coleta_esgoto": {
                    "type": "string"
                  },
                  "destino_lixo_da_residencia": {
                    "type": "string"
                  },
                  "veiculos": {
                    "type": "string"
                  },
                  "renda_total_30_dias": {
                    "type": "string"
                  }
                },
                "required": [
                  "entrevista_indigena_id",
                  "ultima_moradia",
                  "tipo_moradia",
                  "piso",
                  "material_paredes",
                  "material_telhado",
                  "quantidade_comodos",
                  "utensilios_casa",
                  "acesso_agua",
                  "origem_agua",
                  "qualidade_agua_para_beber_e_cozinhar",
                  "forma_acesso_agua",
                  "possui_banheiro",
                  "forma_coleta_esgoto",
                  "destino_lixo_da_residencia",
                  "veiculos",
                  "renda_total_30_dias"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interviews/health-desease": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interviews-health-desease",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Create indigeanous interview health desease info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entrevista_indigena_id": {
                    "type": "string"
                  },
                  "tomou_vacina_covid": {
                    "type": "string"
                  },
                  "motivo_nao_tomar_vacina_covid": {
                    "type": "string"
                  },
                  "familiar_morte_covid": {
                    "type": "string"
                  },
                  "familiar_morte_covid_contribuia_renda_familiar": {
                    "type": "string"
                  },
                  "condicao_de_saude": {
                    "type": "string"
                  },
                  "tekoha_mudou_condicao_de_saude": {
                    "type": "string"
                  },
                  "morador_exposto_veneno_lavoura": {
                    "type": "string"
                  },
                  "doencas_contato_veneno_lavoura": {
                    "type": "string"
                  },
                  "motivo_doencas_contato_veneno_lavoura": {
                    "type": "string"
                  },
                  "acidentes": {
                    "type": "string"
                  },
                  "acidentes_ocorridos": {
                    "type": "string"
                  },
                  "ocorrencia_de_ameacas": {
                    "type": "string"
                  },
                  "ocorrencia_violencia_fisica": {
                    "type": "string"
                  },
                  "local_ocorrencia_violencia_fisica": {
                    "type": "string"
                  },
                  "lista_tratamentos": {
                    "type": "string"
                  },
                  "tratamento_com_paje_ou_similar": {
                    "type": "string"
                  },
                  "tratamento_igreja": {
                    "type": "string"
                  },
                  "medicacao_uso_continuo": {
                    "type": "string"
                  },
                  "doenca_medicacao_uso_continuo": {
                    "type": "string"
                  },
                  "primeiro_recurso_ao_notar_doenca": {
                    "type": "string"
                  },
                  "morador_internado": {
                    "type": "string"
                  },
                  "morador_problemas_bebidas_alcoolicas": {
                    "type": "string"
                  },
                  "fuma_cigarro": {
                    "type": "string"
                  },
                  "morador_problemas_uso_drogas": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "entrevista_indigena_id": "string",
                    "tomou_vacina_covid": "string",
                    "motivo_nao_tomar_vacina_covid": "string",
                    "familiar_morte_covid": "string",
                    "familiar_morte_covid_contribuia_renda_familiar": "string",
                    "condicao_de_saude": "string",
                    "tekoha_mudou_condicao_de_saude": "string",
                    "morador_exposto_veneno_lavoura": "string",
                    "doencas_contato_veneno_lavoura": "string",
                    "motivo_doencas_contato_veneno_lavoura": "string",
                    "acidentes": "string",
                    "acidentes_ocorridos": "string",
                    "ocorrencia_de_ameacas": "string",
                    "ocorrencia_violencia_fisica": "string",
                    "local_ocorrencia_violencia_fisica": "string",
                    "lista_tratamentos": "string",
                    "tratamento_com_paje_ou_similar": "string",
                    "tratamento_igreja": "string",
                    "medicacao_uso_continuo": "string",
                    "doenca_medicacao_uso_continuo": "string",
                    "primeiro_recurso_ao_notar_doenca": "string",
                    "morador_internado": "string",
                    "morador_problemas_bebidas_alcoolicas": "string",
                    "fuma_cigarro": "string",
                    "morador_problemas_uso_drogas": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interview/support": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interview-support",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Create new indigeanous interview support",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "entrevista_indigena_id": "{% response 'body', 'req_1335e9a0d43249a0b589346f89da92da', 'b64::JC5pZA==::46b', 'never', 60 %}",
                    "criancas_comem_escola": "string",
                    "alimentacao_escolar_inclui_cultura": "string",
                    "morador_recebe_ajuda_financeira": "string",
                    "morador_recebe_programa_social": {
                      "bolsa_familia_auxilio_brasil": "string",
                      "bpc": "string",
                      "beneficio_deficientes_idosos": "string",
                      "auxilio_maternidade": "string",
                      "auxilio_doenca": "string",
                      "auxilio_reclusao": "string",
                      "aposentadoria": "string",
                      "pensao_morte": "string",
                      "pronaf": "string",
                      "programa_auxilio_estadual_municipal": "string",
                      "cesta_alimentos": "string"
                    },
                    "recebeu_cesta_alimentos": "string",
                    "recebeu_cesta_alimentos_que_alimentos_deveriam_ter": "string",
                    "motivo_nao_recebe_cesta_alimentos": "string",
                    "recebeu_ajuda_3m": "string",
                    "o_que_recebeu_ajuda_3m": "string",
                    "constrangimento_pedir_ajuda_alimentos_3m": "string"
                  }
                },
                "properties": {
                  "entrevista_indigena_id": {
                    "type": "string"
                  },
                  "criancas_comem_escola": {
                    "type": "string"
                  },
                  "alimentacao_escolar_inclui_cultura": {
                    "type": "string"
                  },
                  "morador_recebe_ajuda_financeira": {
                    "type": "string"
                  },
                  "morador_recebe_programa_social": {
                    "type": "object",
                    "required": [
                      "bolsa_familia_auxilio_brasil",
                      "bpc",
                      "beneficio_deficientes_idosos",
                      "auxilio_maternidade",
                      "auxilio_doenca",
                      "auxilio_reclusao",
                      "aposentadoria",
                      "pensao_morte",
                      "pronaf",
                      "programa_auxilio_estadual_municipal",
                      "cesta_alimentos"
                    ],
                    "properties": {
                      "bolsa_familia_auxilio_brasil": {
                        "type": "string"
                      },
                      "bpc": {
                        "type": "string"
                      },
                      "beneficio_deficientes_idosos": {
                        "type": "string"
                      },
                      "auxilio_maternidade": {
                        "type": "string"
                      },
                      "auxilio_doenca": {
                        "type": "string"
                      },
                      "auxilio_reclusao": {
                        "type": "string"
                      },
                      "aposentadoria": {
                        "type": "string"
                      },
                      "pensao_morte": {
                        "type": "string"
                      },
                      "pronaf": {
                        "type": "string"
                      },
                      "programa_auxilio_estadual_municipal": {
                        "type": "string"
                      },
                      "cesta_alimentos": {
                        "type": "string"
                      }
                    }
                  },
                  "recebeu_cesta_alimentos": {
                    "type": "string"
                  },
                  "recebeu_cesta_alimentos_que_alimentos_deveriam_ter": {
                    "type": "string"
                  },
                  "motivo_nao_recebe_cesta_alimentos": {
                    "type": "string"
                  },
                  "recebeu_ajuda_3m": {
                    "type": "string"
                  },
                  "o_que_recebeu_ajuda_3m": {
                    "type": "string"
                  },
                  "constrangimento_pedir_ajuda_alimentos_3m": {
                    "type": "string"
                  }
                },
                "required": [
                  "entrevista_indigena_id",
                  "criancas_comem_escola",
                  "alimentacao_escolar_inclui_cultura",
                  "morador_recebe_ajuda_financeira",
                  "morador_recebe_programa_social",
                  "recebeu_cesta_alimentos",
                  "recebeu_cesta_alimentos_que_alimentos_deveriam_ter",
                  "motivo_nao_recebe_cesta_alimentos",
                  "recebeu_ajuda_3m",
                  "constrangimento_pedir_ajuda_alimentos_3m"
                ]
              }
            }
          }
        },
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interviews/nutrition": {
      "post": {
        "summary": "",
        "operationId": "post-indigeanous-interviews-nutrition",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Create indigeanous interview nutrition",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "entrevista_indigena_id": "string",
                    "morar_retomada_mudou_alimentacao": "string",
                    "sem_alimentacao_por_conflito_com_terras": "string",
                    "motivo_sem_alimentacao_por_conflito_com_terras": "string",
                    "origem_comida": "string",
                    "possui_moradores_menores_de_16": "string",
                    "alimentacao_saudavel_diariamente_30d": "string",
                    "comida_disponivel_todos_os_dias_30d": "string",
                    "dia_sem_alimentos_30d": "string",
                    "comeu_menos_para_alimentar_os_jovens_30d": "string",
                    "jovens_comeram_menos_do_necessario_30d": "string",
                    "jovens_passaram_algum_dia_sem_alimentos_30d": "string",
                    "preocupacao_em_conseguir_comida_30d": "string",
                    "alimentacao_do_gosto_30d": "string",
                    "consumiram_alimentos_saudaveis_30d": "string",
                    "teve_comida_todos_os_dias_30d": "string",
                    "ficou_sem_comer_nada_30d": "string",
                    "sem_consumo_alimentos_cultura_30d": "string",
                    "acao_quando_falta_comida": "string",
                    "morador_faz_horta": "string",
                    "motivo_morador_nao_faz_horta": "string",
                    "alimentos_da_horta": "string",
                    "frutiferas_nas_proximidades": "string",
                    "producao_de_comida_ano_todo": "string",
                    "origem_semente_plantio": "string",
                    "armazenamento_semente_plantio": "string",
                    "adiciona_veneno_na_plantacao": "string",
                    "dificuldade_com_horta": "string",
                    "lista_dificuldades_com_horta": "string",
                    "finalidade_horta": "string",
                    "animais_de_criacao_alimentacao_ou_venda": "string",
                    "lista_animais_de_criacao_alimentacao_ou_venda": "string",
                    "domicilio_possui_agua_para_animais": "string",
                    "domicilio_possui_agua_para_producao_alimentos": "string",
                    "precisou_comprar_alimentos_3m": "string",
                    "lugar_precisou_comprar_alimentos_3m": "string",
                    "possui_cultivo_plantas_medicinais": "string",
                    "faz_remedios_com_plantas": "string",
                    "moradia_possui_fogao_ou_lenha": "string",
                    "alimentos_consumidos_dia_anterior": "string"
                  }
                },
                "properties": {
                  "entrevista_indigena_id": {
                    "type": "string"
                  },
                  "morar_retomada_mudou_alimentacao": {
                    "type": "string"
                  },
                  "sem_alimentacao_por_conflito_com_terras": {
                    "type": "string"
                  },
                  "motivo_sem_alimentacao_por_conflito_com_terras": {
                    "type": "string"
                  },
                  "origem_comida": {
                    "type": "string"
                  },
                  "possui_moradores_menores_de_16": {
                    "type": "string"
                  },
                  "alimentacao_saudavel_diariamente_30d": {
                    "type": "string"
                  },
                  "comida_disponivel_todos_os_dias_30d": {
                    "type": "string"
                  },
                  "dia_sem_alimentos_30d": {
                    "type": "string"
                  },
                  "comeu_menos_para_alimentar_os_jovens_30d": {
                    "type": "string"
                  },
                  "jovens_comeram_menos_do_necessario_30d": {
                    "type": "string"
                  },
                  "jovens_passaram_algum_dia_sem_alimentos_30d": {
                    "type": "string"
                  },
                  "preocupacao_em_conseguir_comida_30d": {
                    "type": "string"
                  },
                  "alimentacao_do_gosto_30d": {
                    "type": "string"
                  },
                  "consumiram_alimentos_saudaveis_30d": {
                    "type": "string"
                  },
                  "teve_comida_todos_os_dias_30d": {
                    "type": "string"
                  },
                  "ficou_sem_comer_nada_30d": {
                    "type": "string"
                  },
                  "sem_consumo_alimentos_cultura_30d": {
                    "type": "string"
                  },
                  "acao_quando_falta_comida": {
                    "type": "string"
                  },
                  "morador_faz_horta": {
                    "type": "string"
                  },
                  "motivo_morador_nao_faz_horta": {
                    "type": "string"
                  },
                  "alimentos_da_horta": {
                    "type": "string"
                  },
                  "frutiferas_nas_proximidades": {
                    "type": "string"
                  },
                  "producao_de_comida_ano_todo": {
                    "type": "string"
                  },
                  "origem_semente_plantio": {
                    "type": "string"
                  },
                  "armazenamento_semente_plantio": {
                    "type": "string"
                  },
                  "adiciona_veneno_na_plantacao": {
                    "type": "string"
                  },
                  "dificuldade_com_horta": {
                    "type": "string"
                  },
                  "lista_dificuldades_com_horta": {
                    "type": "string"
                  },
                  "finalidade_horta": {
                    "type": "string"
                  },
                  "animais_de_criacao_alimentacao_ou_venda": {
                    "type": "string"
                  },
                  "lista_animais_de_criacao_alimentacao_ou_venda": {
                    "type": "string"
                  },
                  "domicilio_possui_agua_para_animais": {
                    "type": "string"
                  },
                  "domicilio_possui_agua_para_producao_alimentos": {
                    "type": "string"
                  },
                  "precisou_comprar_alimentos_3m": {
                    "type": "string"
                  },
                  "lugar_precisou_comprar_alimentos_3m": {
                    "type": "string"
                  },
                  "possui_cultivo_plantas_medicinais": {
                    "type": "string"
                  },
                  "faz_remedios_com_plantas": {
                    "type": "string"
                  },
                  "moradia_possui_fogao_ou_lenha": {
                    "type": "string"
                  },
                  "alimentos_consumidos_dia_anterior": {
                    "type": "string"
                  }
                },
                "required": [
                  "entrevista_indigena_id",
                  "morar_retomada_mudou_alimentacao",
                  "sem_alimentacao_por_conflito_com_terras",
                  "motivo_sem_alimentacao_por_conflito_com_terras",
                  "origem_comida",
                  "possui_moradores_menores_de_16",
                  "preocupacao_em_conseguir_comida_30d",
                  "alimentacao_do_gosto_30d",
                  "consumiram_alimentos_saudaveis_30d",
                  "teve_comida_todos_os_dias_30d",
                  "ficou_sem_comer_nada_30d",
                  "sem_consumo_alimentos_cultura_30d",
                  "acao_quando_falta_comida",
                  "morador_faz_horta",
                  "alimentos_da_horta",
                  "frutiferas_nas_proximidades",
                  "producao_de_comida_ano_todo",
                  "origem_semente_plantio",
                  "armazenamento_semente_plantio",
                  "adiciona_veneno_na_plantacao",
                  "dificuldade_com_horta",
                  "finalidade_horta",
                  "animais_de_criacao_alimentacao_ou_venda",
                  "domicilio_possui_agua_para_animais",
                  "domicilio_possui_agua_para_producao_alimentos",
                  "precisou_comprar_alimentos_3m",
                  "possui_cultivo_plantas_medicinais",
                  "faz_remedios_com_plantas",
                  "moradia_possui_fogao_ou_lenha",
                  "alimentos_consumidos_dia_anterior"
                ]
              }
            }
          }
        },
        "tags": [
          "indigeanous-interviews"
        ]
      },
      "parameters": []
    },
    "/indigenous-interview": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "municipio": {
                        "type": "string"
                      },
                      "aldeia_comunidade": {
                        "type": "string"
                      },
                      "tipo_comunidade": {
                        "type": "string"
                      },
                      "entrevistador_id": {
                        "type": "string"
                      },
                      "projeto_id": {
                        "type": "string"
                      },
                      "data_entrevista": {
                        "type": "string"
                      },
                      "responsavel_domicilio": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": [
                      {
                        "id": "82d50898-7912-4987-ab7f-85d626a4462e",
                        "municipio": "Presidente Prudente",
                        "aldeia_comunidade": "Tupi",
                        "tipo_comunidade": "reserva",
                        "entrevistador_id": "cd0e1d98-737f-4335-bf98-bd359ae2fb9e",
                        "projeto_id": "6bfcb629-dbb1-47c7-88bf-4c7854415238",
                        "data_entrevista": "2022-12-17T16:25:23.286Z",
                        "responsavel_domicilio": true,
                        "created_at": "2022-12-17T19:25:23.381Z",
                        "updated_at": "2022-12-17T19:25:23.381Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-indigenous-interview",
        "description": "List all indigenous interviews",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/indigenous-interviews/handle-offline-data": {
      "post": {
        "summary": "",
        "operationId": "post-indigenous-interviews-handle-offline-data",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Handle offline interviews data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "interview": {
                      "type": "object",
                      "required": [
                        "municipio",
                        "aldeia_comunidade",
                        "tipo_comunidade",
                        "entrevistador_id",
                        "projeto_id",
                        "data_entrevista",
                        "responsavel_domicilio",
                        "numero_projeto"
                      ],
                      "properties": {
                        "municipio": {
                          "type": "string"
                        },
                        "aldeia_comunidade": {
                          "type": "string"
                        },
                        "tipo_comunidade": {
                          "type": "string"
                        },
                        "entrevistador_id": {
                          "type": "string"
                        },
                        "projeto_id": {
                          "type": "string"
                        },
                        "data_entrevista": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "responsavel_domicilio": {
                          "type": "boolean"
                        },
                        "numero_projeto": {
                          "type": "number"
                        }
                      }
                    },
                    "demography": {
                      "type": "object",
                      "required": [
                        "entrevista_indigena_id",
                        "total_moradores",
                        "moradores"
                      ],
                      "properties": {
                        "entrevista_indigena_id": {
                          "type": "string"
                        },
                        "total_moradores": {
                          "type": "number"
                        },
                        "moradores": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "nome": {
                                "type": "string"
                              },
                              "relacao_com_lider": {
                                "type": "string"
                              },
                              "idade": {
                                "type": "string"
                              },
                              "sexo": {
                                "type": "string"
                              },
                              "indigena": {
                                "type": "string"
                              },
                              "povo_etnia": {
                                "type": "string"
                              },
                              "serie_frequentada_escola": {
                                "type": "string"
                              },
                              "crenca_religiao": {
                                "type": "string"
                              },
                              "ocupacao_principal": {
                                "type": "string"
                              },
                              "funcao_comunidade": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "nome",
                              "relacao_com_lider",
                              "idade",
                              "sexo",
                              "indigena",
                              "povo_etnia",
                              "serie_frequentada_escola",
                              "crenca_religiao",
                              "ocupacao_principal",
                              "funcao_comunidade"
                            ]
                          }
                        }
                      }
                    },
                    "residence": {
                      "type": "object",
                      "required": [
                        "entrevista_indigena_id",
                        "ultima_moradia",
                        "tipo_moradia",
                        "piso",
                        "material_paredes",
                        "material_telhado",
                        "quantidade_comodos",
                        "utensilios_casa",
                        "acesso_agua",
                        "origem_agua",
                        "qualidade_agua_para_beber_e_cozinhar",
                        "forma_acesso_agua",
                        "possui_banheiro",
                        "forma_coleta_esgoto",
                        "destino_lixo_da_residencia",
                        "veiculos",
                        "renda_total_30_dias"
                      ],
                      "properties": {
                        "entrevista_indigena_id": {
                          "type": "string"
                        },
                        "ultima_moradia": {
                          "type": "string"
                        },
                        "tipo_moradia": {
                          "type": "string"
                        },
                        "piso": {
                          "type": "string"
                        },
                        "material_paredes": {
                          "type": "string"
                        },
                        "material_telhado": {
                          "type": "string"
                        },
                        "quantidade_comodos": {
                          "type": "string"
                        },
                        "utensilios_casa": {
                          "type": "string"
                        },
                        "acesso_agua": {
                          "type": "string"
                        },
                        "origem_agua": {
                          "type": "string"
                        },
                        "qualidade_agua_para_beber_e_cozinhar": {
                          "type": "string"
                        },
                        "forma_acesso_agua": {
                          "type": "string"
                        },
                        "possui_banheiro": {
                          "type": "string"
                        },
                        "forma_coleta_esgoto": {
                          "type": "string"
                        },
                        "destino_lixo_da_residencia": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "veiculos": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "renda_total_30_dias": {
                          "type": "string"
                        }
                      }
                    },
                    "saude_doenca": {
                      "type": "object",
                      "required": [
                        "entrevista_indigena_id",
                        "tomou_vacina_covid",
                        "motivo_nao_tomar_vacina_covid",
                        "familiar_morte",
                        "familiar_morte_contribuia_renda_familiar",
                        "condicao_de_saude",
                        "tekoha_mudou_condicao_de_saude",
                        "morador_exposto_veneno_lavoura",
                        "doencas_contato_veneno_lavoura",
                        "motivo_doencas_contato_veneno_lavoura",
                        "acidentes",
                        "acidentes_ocorridos",
                        "ocorrencia_de_ameacas",
                        "ocorrencia_violencia_fisica",
                        "local_ocorrencia_violencia_fisica",
                        "lista_tratamentos",
                        "tratamento_com_paje_ou_similar",
                        "tratamento_igreja",
                        "medicacao_uso_continuo",
                        "doenca_medicacao_uso_continuo",
                        "primeiro_recurso_ao_notar_doenca",
                        "morador_internado",
                        "morador_problemas_bebidas_alcoolicas",
                        "fuma_cigarro",
                        "morador_problemas_uso_drogas"
                      ],
                      "properties": {
                        "entrevista_indigena_id": {
                          "type": "string"
                        },
                        "tomou_vacina_covid": {
                          "type": "string"
                        },
                        "motivo_nao_tomar_vacina_covid": {
                          "type": "string"
                        },
                        "familiar_morte": {
                          "type": "string"
                        },
                        "familiar_morte_contribuia_renda_familiar": {
                          "type": "string"
                        },
                        "condicao_de_saude": {
                          "type": "string"
                        },
                        "tekoha_mudou_condicao_de_saude": {
                          "type": "string"
                        },
                        "morador_exposto_veneno_lavoura": {
                          "type": "string"
                        },
                        "doencas_contato_veneno_lavoura": {
                          "type": "string"
                        },
                        "motivo_doencas_contato_veneno_lavoura": {
                          "type": "string"
                        },
                        "acidentes": {
                          "type": "string"
                        },
                        "acidentes_ocorridos": {
                          "type": "string"
                        },
                        "ocorrencia_de_ameacas": {
                          "type": "string"
                        },
                        "ocorrencia_violencia_fisica": {
                          "type": "string"
                        },
                        "local_ocorrencia_violencia_fisica": {
                          "type": "string"
                        },
                        "lista_tratamentos": {
                          "type": "string"
                        },
                        "tratamento_com_paje_ou_similar": {
                          "type": "string"
                        },
                        "tratamento_igreja": {
                          "type": "string"
                        },
                        "medicacao_uso_continuo": {
                          "type": "string"
                        },
                        "doenca_medicacao_uso_continuo": {
                          "type": "string"
                        },
                        "primeiro_recurso_ao_notar_doenca": {
                          "type": "string"
                        },
                        "morador_internado": {
                          "type": "string"
                        },
                        "morador_problemas_bebidas_alcoolicas": {
                          "type": "string"
                        },
                        "fuma_cigarro": {
                          "type": "string"
                        },
                        "morador_problemas_uso_drogas": {
                          "type": "string"
                        }
                      }
                    },
                    "alimentacao_nutricao": {
                      "type": "object",
                      "required": [
                        "entrevista_indigena_id",
                        "morar_retomada_mudou_alimentacao",
                        "sem_alimentacao_por_conflito_com_terras",
                        "motivo_sem_alimentacao_por_conflito_com_terras",
                        "origem_comida",
                        "possui_moradores_menores_de_16",
                        "preocupacao_em_conseguir_comida_30d",
                        "alimentacao_do_gosto_30d",
                        "sem_consumo_alimentos_cultura_30d",
                        "acao_quando_falta_comida",
                        "morador_faz_horta",
                        "alimentos_da_horta",
                        "frutiferas_nas_proximidades",
                        "producao_de_comida_ano_todo",
                        "origem_semente_plantio",
                        "armazenamento_semente_plantio",
                        "dificuldade_com_horta",
                        "finalidade_horta",
                        "animais_de_criacao_alimentacao_ou_venda",
                        "domicilio_possui_agua_para_animais",
                        "domicilio_possui_agua_para_producao_alimentos",
                        "precisou_comprar_alimentos_3m",
                        "possui_cultivo_plantas_medicinais",
                        "faz_remedios_com_plantas",
                        "moradia_possui_fogao_ou_lenha",
                        "alimentos_consumidos_dia_anterior"
                      ],
                      "properties": {
                        "entrevista_indigena_id": {
                          "type": "string"
                        },
                        "morar_retomada_mudou_alimentacao": {
                          "type": "string"
                        },
                        "sem_alimentacao_por_conflito_com_terras": {
                          "type": "string"
                        },
                        "motivo_sem_alimentacao_por_conflito_com_terras": {
                          "type": "string"
                        },
                        "origem_comida": {
                          "type": "string"
                        },
                        "possui_moradores_menores_de_16": {
                          "type": "string"
                        },
                        "alimentacao_saudavel_diariamente_30d": {
                          "type": "string"
                        },
                        "comida_disponivel_todos_os_dias_30d": {
                          "type": "string"
                        },
                        "dia_sem_alimentos_30d": {
                          "type": "string"
                        },
                        "comeu_menos_para_alimentar_os_jovens_30d": {
                          "type": "string"
                        },
                        "jovens_comeram_menos_do_necessario_30d": {
                          "type": "string"
                        },
                        "jovens_passaram_algum_dia_sem_alimentos_30d": {
                          "type": "string"
                        },
                        "preocupacao_em_conseguir_comida_30d": {
                          "type": "string"
                        },
                        "alimentacao_do_gosto_30d": {
                          "type": "string"
                        },
                        "sem_consumo_alimentos_cultura_30d": {
                          "type": "string"
                        },
                        "acao_quando_falta_comida": {
                          "type": "string"
                        },
                        "morador_faz_horta": {
                          "type": "string"
                        },
                        "motivo_morador_nao_faz_horta": {
                          "type": "string"
                        },
                        "alimentos_da_horta": {
                          "type": "string"
                        },
                        "frutiferas_nas_proximidades": {
                          "type": "string"
                        },
                        "producao_de_comida_ano_todo": {
                          "type": "string"
                        },
                        "origem_semente_plantio": {
                          "type": "string"
                        },
                        "armazenamento_semente_plantio": {
                          "type": "string"
                        },
                        "dificuldade_com_horta": {
                          "type": "string"
                        },
                        "lista_dificuldades_com_horta": {
                          "type": "string"
                        },
                        "finalidade_horta": {
                          "type": "string"
                        },
                        "animais_de_criacao_alimentacao_ou_venda": {
                          "type": "string"
                        },
                        "lista_animais_de_criacao_alimentacao_ou_venda": {
                          "type": "string"
                        },
                        "domicilio_possui_agua_para_animais": {
                          "type": "string"
                        },
                        "domicilio_possui_agua_para_producao_alimentos": {
                          "type": "string"
                        },
                        "precisou_comprar_alimentos_3m": {
                          "type": "string"
                        },
                        "lugar_precisou_comprar_alimentos_3m": {
                          "type": "string"
                        },
                        "possui_cultivo_plantas_medicinais": {
                          "type": "string"
                        },
                        "faz_remedios_com_plantas": {
                          "type": "string"
                        },
                        "moradia_possui_fogao_ou_lenha": {
                          "type": "string"
                        },
                        "alimentos_consumidos_dia_anterior": {
                          "type": "string"
                        }
                      }
                    },
                    "apoio_e_protecao": {
                      "type": "object",
                      "required": [
                        "entrevista_indigena_id",
                        "criancas_comem_escola",
                        "alimentacao_escolar_inclui_cultura",
                        "morador_recebe_ajuda_financeira",
                        "morador_recebe_programa_social",
                        "recebeu_cesta_alimentos",
                        "recebeu_cesta_alimentos_que_alimentos_deveriam_ter",
                        "motivo_nao_recebe_cesta_alimentos",
                        "recebeu_ajuda_3m",
                        "constrangimento_pedir_ajuda_alimentos_3m"
                      ],
                      "properties": {
                        "entrevista_indigena_id": {
                          "type": "string"
                        },
                        "criancas_comem_escola": {
                          "type": "string"
                        },
                        "alimentacao_escolar_inclui_cultura": {
                          "type": "string"
                        },
                        "morador_recebe_ajuda_financeira": {
                          "type": "string"
                        },
                        "morador_recebe_programa_social": {
                          "type": "object",
                          "required": [
                            "bolsa_familia_auxilio_brasil",
                            "bpc",
                            "beneficio_deficientes_idosos",
                            "auxilio_maternidade",
                            "auxilio_doenca",
                            "auxilio_reclusao",
                            "aposentadoria",
                            "pensao_morte",
                            "pronaf",
                            "programa_auxilio_estadual_municipal",
                            "cesta_alimentos"
                          ],
                          "properties": {
                            "bolsa_familia_auxilio_brasil": {
                              "type": "string"
                            },
                            "bpc": {
                              "type": "string"
                            },
                            "beneficio_deficientes_idosos": {
                              "type": "string"
                            },
                            "auxilio_maternidade": {
                              "type": "string"
                            },
                            "auxilio_doenca": {
                              "type": "string"
                            },
                            "auxilio_reclusao": {
                              "type": "string"
                            },
                            "aposentadoria": {
                              "type": "string"
                            },
                            "pensao_morte": {
                              "type": "string"
                            },
                            "pronaf": {
                              "type": "string"
                            },
                            "programa_auxilio_estadual_municipal": {
                              "type": "string"
                            },
                            "cesta_alimentos": {
                              "type": "string"
                            }
                          }
                        },
                        "recebeu_cesta_alimentos": {
                          "type": "string"
                        },
                        "recebeu_cesta_alimentos_que_alimentos_deveriam_ter": {
                          "type": "string"
                        },
                        "motivo_nao_recebe_cesta_alimentos": {
                          "type": "string"
                        },
                        "recebeu_ajuda_3m": {
                          "type": "string"
                        },
                        "o_que_recebeu_ajuda_3m": {
                          "type": "string"
                        },
                        "constrangimento_pedir_ajuda_alimentos_3m": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "interview",
                    "demography",
                    "residence",
                    "saude_doenca",
                    "alimentacao_nutricao",
                    "apoio_e_protecao"
                  ]
                }
              }
            }
          },
          "description": ""
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about this API here",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3333/"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "Project": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Project"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Project"
            }
          }
        },
        "description": "Data format to create a project",
        "required": true
      },
      "Interview": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Interview"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Interview"
            }
          }
        },
        "description": "Data format to create an interview",
        "required": true
      },
      "Person": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Person"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        },
        "description": "Data format to create a person",
        "required": true
      },
      "PersonUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/PersonUpdate"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PersonUpdate"
            }
          }
        },
        "description": "Data format to create a person",
        "required": true
      },
      "User": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "Data format to add an user",
        "required": true
      },
      "UserUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/UserUpdate"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/UserUpdate"
            }
          }
        },
        "description": "Data format to create a person",
        "required": true
      },
      "Household": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Household"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Household"
            }
          }
        },
        "description": "Data format to add a Household",
        "required": true
      },
      "FamilyMember": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FamilyMember"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/FamilyMember"
            }
          }
        },
        "description": "Data format to add a family member",
        "required": true
      },
      "Address": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "description": "Data format to add a address",
        "required": true
      },
      "Auth": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Auth"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Auth"
            }
          }
        },
        "description": "Data format to authenticate an user",
        "required": true
      },
      "Pass": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pass"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pass"
            }
          }
        },
        "description": "Data format to reset password for the user",
        "required": true
      },
      "NewPass": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewPass"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/NewPass"
            }
          }
        },
        "description": "Data format to reset password for the user",
        "required": true
      }
    },
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project_number": {
            "type": "integer",
            "format": "int32"
          },
          "organizations": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Project"
        }
      },
      "Interview": {
        "type": "object",
        "properties": {
          "interviewer_id": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "project_number": {
            "type": "integer",
            "format": "int32"
          },
          "person_id": {
            "type": "string"
          },
          "household_id": {
            "type": "string"
          },
          "address_id": {
            "type": "string"
          },
          "is_complete": {
            "type": "boolean"
          },
          "is_complete_with_errors": {
            "type": "boolean"
          },
          "interview_type": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Interview"
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "interviewer_id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "idade": {
            "type": "integer",
            "format": "int32"
          },
          "sexo": {
            "type": "string",
            "description": "Person gender",
            "enum": [
              "masculino",
              "feminino",
              "outro"
            ]
          },
          "raca_cor": {
            "type": "string"
          },
          "ler_escrever": {
            "type": "string"
          },
          "escolaridade": {
            "type": "string"
          },
          "situacao_de_trabalho": {
            "type": "string"
          },
          "ocupacao": {
            "type": "string"
          },
          "local_de_trabalho": {
            "type": "string"
          },
          "diagnostico_covid": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Person"
        }
      },
      "PersonUpdate": {
        "type": "object",
        "properties": {
          "interviewer_id": {
            "type": "string"
          },
          "person_id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "idade": {
            "type": "integer",
            "format": "int32"
          },
          "sexo": {
            "type": "string",
            "description": "Person gender",
            "enum": [
              "masculino",
              "feminino",
              "outro"
            ]
          },
          "raca_cor": {
            "type": "string"
          },
          "ler_escrever": {
            "type": "string"
          },
          "escolaridade": {
            "type": "string"
          },
          "situacao_de_trabalho": {
            "type": "string"
          },
          "ocupacao": {
            "type": "string"
          },
          "local_de_trabalho": {
            "type": "string"
          },
          "diagnostico_covid": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Person"
        }
      },
      "Household": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "string"
          },
          "local_do_domicilio": {
            "type": "string"
          },
          "morador_de_rua": {
            "type": "string"
          },
          "povos_tradicionais": {
            "type": "string"
          },
          "qual_povo_tradicional": {
            "type": "string"
          },
          "pessoa_de_referencia": {
            "type": "string"
          },
          "idade_pessoa_de_referencia": {
            "type": "integer",
            "format": "int32"
          },
          "sexo_pessoa_de_referencia": {
            "type": "string",
            "description": "Person gender",
            "enum": [
              "masculino",
              "feminino",
              "outro"
            ]
          },
          "raca_cor": {
            "type": "string"
          },
          "ler_escrever": {
            "type": "string"
          },
          "escolaridade": {
            "type": "string"
          },
          "situacao_de_trabalho": {
            "type": "string"
          },
          "ocupacao_profissional": {
            "type": "string"
          },
          "local_de_trabalho": {
            "type": "string"
          },
          "covid_2020": {
            "type": "string"
          },
          "covid_perda_2020": {
            "type": "string"
          },
          "covid_2021": {
            "type": "string"
          },
          "covid_perda_2021": {
            "type": "string"
          },
          "tipo_de_residencia": {
            "type": "string"
          },
          "numero_de_comodos": {
            "type": "integer",
            "format": "int32"
          },
          "material_de_construcao": {
            "type": "string"
          },
          "agua_potavel": {
            "type": "string"
          },
          "agua_animais": {
            "type": "string"
          },
          "agua_producao_alimentos": {
            "type": "string"
          },
          "esgoto": {
            "type": "string"
          },
          "numero_de_pessoas": {
            "type": "integer",
            "format": "int32"
          },
          "uma_pessoa_domicilio": {
            "type": "boolean"
          },
          "cinco_anos_ou_mais": {
            "type": "integer",
            "format": "int32"
          },
          "entre_6_e_18": {
            "type": "integer",
            "format": "int32"
          },
          "entre_19_e_59": {
            "type": "integer",
            "format": "int32"
          },
          "sessenta_anos_ou_mais": {
            "type": "integer",
            "format": "int32"
          },
          "pessoas_convidadas": {
            "type": "string"
          },
          "nao_sabe_renda": {
            "type": "boolean"
          },
          "renda_familiar": {
            "type": "integer",
            "format": "int32"
          },
          "faixa_de_renda": {
            "type": "string"
          },
          "perda_de_emprego": {
            "type": "boolean"
          },
          "reducao_de_salario": {
            "type": "boolean"
          },
          "ajuda_financeira": {
            "type": "boolean"
          },
          "divida": {
            "type": "boolean"
          },
          "corte_de_gastos": {
            "type": "boolean"
          },
          "corte_de_gastos_nao_essenciais": {
            "type": "boolean"
          },
          "ns_nr_trabalho": {
            "type": "boolean"
          },
          "educacao_basica_publica": {
            "type": "string"
          },
          "pnae": {
            "type": "string"
          },
          "cadastro_unico": {
            "type": "string"
          },
          "bolsa_familia": {
            "type": "string"
          },
          "bpc": {
            "type": "string"
          },
          "pensao": {
            "type": "string"
          },
          "auxilio_reclusao": {
            "type": "string"
          },
          "cesta_de_alimentos": {
            "type": "string"
          },
          "restaurantes_populares": {
            "type": "string"
          },
          "auxilio_emergencial": {
            "type": "string"
          },
          "auxilio_vezes": {
            "type": "string"
          },
          "ajuda_instituicao_caridade": {
            "type": "string"
          },
          "tipo_de_ajuda": {
            "type": "string"
          },
          "vergonha": {
            "type": "string"
          },
          "produz_alimento": {
            "type": "string"
          },
          "alimento_para_venda": {
            "type": "string"
          },
          "divisao_alimento": {
            "type": "string"
          },
          "dificuldade_venda": {
            "type": "string"
          },
          "nao_vendeu": {
            "type": "string"
          },
          "preocupacao_alimentos": {
            "type": "string"
          },
          "alimentos_acabaram": {
            "type": "string"
          },
          "alimentos_saudaveis": {
            "type": "string"
          },
          "alimentos_poucos_tipos": {
            "type": "string"
          },
          "refeicoes_adulto": {
            "type": "string"
          },
          "adulto_comeu_menos": {
            "type": "string"
          },
          "adulto_fome": {
            "type": "string"
          },
          "adulto_uma_refeicao": {
            "type": "string"
          },
          "como_adquiriu_comida": {
            "type": "string"
          },
          "alteracao_preco_comida": {
            "type": "string"
          },
          "perfil_de_compra": {
            "type": "string"
          },
          "mercado": {
            "type": "string"
          },
          "gastos_alimentacao": {
            "type": "string"
          },
          "feijao": {
            "type": "boolean"
          },
          "arroz": {
            "type": "boolean"
          },
          "carnes": {
            "type": "boolean"
          },
          "verduras_legumes": {
            "type": "boolean"
          },
          "frutas_frescas": {
            "type": "boolean"
          },
          "leite": {
            "type": "boolean"
          },
          "hamburguer_embutidos": {
            "type": "boolean"
          },
          "bebidas_adocadas": {
            "type": "boolean"
          },
          "macarrao_instantaneo_salgadinhos_de_pacote_biscoitos_salgados": {
            "type": "boolean"
          },
          "biscoito_recheado_doces_guloseimas": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Household"
        }
      },
      "FamilyMember": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "Person gender",
            "enum": [
              "masculino",
              "feminino",
              "outro"
            ]
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "FamilyMember"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "household_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "post_code": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "street_or_location": {
            "type": "string"
          },
          "telephone_number": {
            "type": "string"
          },
          "house_number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "organization_name": {
            "type": "string"
          },
          "telephone_number": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "organization_name": {
            "type": "string"
          },
          "telephone_number": {
            "type": "string"
          },
          "old_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Auth"
        }
      },
      "Pass": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Pass"
        }
      },
      "NewPass": {
        "type": "object",
        "properties": {
          "password_confirmation": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Pass"
        }
      },
      "IndigeanousInterview": {
        "title": "IndigeanousInterview",
        "x-stoplight": {
          "id": "3f32wqpsyh906"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "comunity": {
            "type": "string"
          },
          "land": {
            "type": "string"
          },
          "area": {
            "type": "number"
          },
          "campName": {
            "type": "string"
          },
          "interviewerId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IndigeanousDemography": {
        "title": "IndigeanousDemography",
        "x-stoplight": {
          "id": "344vm2vf65vzh"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "indigeanousInterviewId": {
            "type": "string"
          },
          "totalResidents": {
            "type": "number"
          },
          "residents": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "workedHarvest": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
